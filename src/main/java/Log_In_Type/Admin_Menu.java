/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Log_In_Type;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JOptionPane;

/**
 *
 * @author Aans
 */
public class Admin_Menu extends javax.swing.JFrame {

    /**
     * Creates new form Admin_Menu
     */
    public Admin_Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customers = new javax.swing.JButton();
        riders = new javax.swing.JButton();
        Resturants = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        customers.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        customers.setText("Manage Customers");
        customers.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        customers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersActionPerformed(evt);
            }
        });

        riders.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        riders.setText("Manage Riders");
        riders.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        riders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ridersActionPerformed(evt);
            }
        });

        Resturants.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Resturants.setText("Manage Resturants");
        Resturants.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Resturants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResturantsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Admin Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(customers)
                .addGap(141, 141, 141)
                .addComponent(riders)
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Resturants)
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(riders)
                    .addComponent(customers))
                .addGap(64, 64, 64)
                .addComponent(Resturants)
                .addGap(113, 113, 113))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     void delete(String filename, int startline)
    {
        try
        {
            BufferedReader br=new BufferedReader(new FileReader(filename+".csv"));
            StringBuffer sb=new StringBuffer("");
            int linenumber=1;
            String line;
            while((line=br.readLine())!=null)
            {
                if(linenumber<startline||linenumber>=startline+1)
                    sb.append(line+"\n");
                linenumber++;
            }
            if(startline+1>linenumber)
                System.out.println("End of file reached.");
            br.close();

            FileWriter fw=new FileWriter(new File(filename+".csv"));
            fw.write(sb.toString());
            fw.close();
        }
        catch (Exception e)
        {
            System.out.println("Something went wrong: "+e.getMessage());
        }
    }
    
    void readFood(String Food_name, String FileName)
     {
         String data[];
         String FoodName;
         double FoodPrice;
         try {
             FileReader fileReader = new FileReader(FileName+".csv");
             BufferedReader bufferedReader = new BufferedReader(fileReader);
             String line;
             boolean check=false;
             for (int i=0;(line = bufferedReader.readLine())!=null;i++)
             {
                  data = line.split(",");
                  FoodName = data[0];
                  FoodPrice = Double.valueOf(data[1]);
                  if(Food_name.equalsIgnoreCase(FoodName))
                  { delete(FileName, i+1);
                  check = true;
                  JOptionPane.showMessageDialog(null, "Successfully Deleted!");
                  }
             }
             if (check==false)
             {
                 JOptionPane.showMessageDialog(null, "Food not found!");
             }
             bufferedReader.close();
             System.out.println("Readed");
         }catch (Exception e)
         {
             System.out.println("ERROR");
             e.printStackTrace();
         }
     }
//
//
//    void readPerson(String Name, String FileName)
//     {
//         String data[];
//         String name;
////         double FoodPrice;
//         try {
//             FileReader fileReader = new FileReader(FileName+".csv");
//             BufferedReader bufferedReader = new BufferedReader(fileReader);
//             String line;
//             boolean check=false;
//             for (int i=0;(line = bufferedReader.readLine())!=null;i++)
//             {
//                  data = line.split(",");
//                  name = data[0];
////                  FoodPrice = Double.valueOf(data[1]);
//                  if(Name.equalsIgnoreCase(name))
//                  { delete(FileName, i+1);
//                  check = true;
//                  JOptionPane.showMessageDialog(null, "Successfully Deleted!");
//                  }
//             }
//             if (check==false)
//             {
//                 JOptionPane.showMessageDialog(null, "Food not found!");
//             }
//             bufferedReader.close();
//             System.out.println("Readed");
//         }catch (Exception e)
//         {
//             System.out.println("ERROR");
//             e.printStackTrace();
//         }
//     }

    private void customersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersActionPerformed
        // TODO add your handling code here:
        Delete_Customer delete_Customer = new Delete_Customer();
        dispose();
        delete_Customer.setVisible(true);
    }//GEN-LAST:event_customersActionPerformed

    private void ridersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ridersActionPerformed
        // TODO add your handling code here:
        Delete_Rider delete_Rider = new Delete_Rider();
        dispose();
        delete_Rider.setVisible(true);
//        dispose();
    }//GEN-LAST:event_ridersActionPerformed

    private void ResturantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResturantsActionPerformed
        // TODO add your handling code here:
        Delete_Resturant delete_Resturant = new Delete_Resturant();
        dispose();
        delete_Resturant.setVisible(true);
    }//GEN-LAST:event_ResturantsActionPerformed

    /**
     * @param args the command line arguments
     */
    public void admin_menu() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Resturants;
    private javax.swing.JButton customers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton riders;
    // End of variables declaration//GEN-END:variables
}
